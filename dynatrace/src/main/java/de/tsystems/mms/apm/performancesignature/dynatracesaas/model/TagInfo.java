/*
 * Copyright (c) 2014-2018 T-Systems Multimedia Solutions GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Dynatrace Environment API
 * Documentation of the Dynatrace REST API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/section-api) to read about use-cases and examples.
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.tsystems.mms.apm.performancesignature.dynatracesaas.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.tsystems.mms.apm.performancesignature.dynatracesaas.util.DynatraceUtils;
import de.tsystems.mms.apm.performancesignature.ui.util.PerfSigUIUtils;
import hudson.Extension;
import hudson.model.AbstractDescribableImpl;
import hudson.model.Descriptor;
import hudson.model.Item;
import hudson.util.ListBoxModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.kohsuke.accmod.Restricted;
import org.kohsuke.accmod.restrictions.NoExternalUse;
import org.kohsuke.stapler.AncestorInPath;
import org.kohsuke.stapler.DataBoundConstructor;
import org.kohsuke.stapler.DataBoundSetter;

import javax.annotation.Nonnull;
import java.io.IOException;
import java.util.Arrays;

import static de.tsystems.mms.apm.performancesignature.ui.util.PerfSigUIUtils.toIndentedString;

/**
 * Tag of a Dynatrace entity.
 */
@ApiModel(description = "Tag of a Dynatrace entity.")

public class TagInfo extends AbstractDescribableImpl<TagInfo> {
    @SerializedName("context")
    private ContextEnum context;
    @SerializedName("key")
    private String key;
    @SerializedName("value")
    private String value;

    @DataBoundConstructor
    public TagInfo() {
    }

    public TagInfo context(ContextEnum context) {
        this.context = context;
        return this;
    }

    /**
     * The origin of the tag, like AWS or Cloud Foundry.   Custom tags use the &#x60;CONTEXTLESS&#x60; value.
     *
     * @return context
     **/
    @ApiModelProperty(value = "The origin of the tag, like AWS or Cloud Foundry.   Custom tags use the `CONTEXTLESS` value.")
    public ContextEnum getContextEnum() {
        return context;
    }

    public String getContext() {
        if (context == null) return null;
        return context.getValue();
    }

    @DataBoundSetter
    public void setContext(String context) {
        this.context = ContextEnum.fromValue(context);
    }

    public void setContext(ContextEnum context) {
        this.context = context;
    }

    public TagInfo key(String key) {
        this.key = key;
        return this;
    }

    /**
     * The key of the tag.   Custom tags have the tag value here.
     *
     * @return key
     **/
    @ApiModelProperty(required = true, value = "The key of the tag.   Custom tags have the tag value here.")
    public String getKey() {
        return key;
    }

    @DataBoundSetter
    public void setKey(String key) {
        this.key = key;
    }

    public TagInfo value(String value) {
        this.value = value;
        return this;
    }

    /**
     * The value of the tag.   Not applicable to custom tags.
     *
     * @return value
     **/
    @ApiModelProperty(value = "The value of the tag.   Not applicable to custom tags.")
    public String getValue() {
        return value;
    }

    @DataBoundSetter
    public void setValue(String value) {
        this.value = value;
    }

    @Override
    public String toString() {
        return "class TagInfo {\n" +
                "    context: " + toIndentedString(context) + "\n" +
                "    key: " + toIndentedString(key) + "\n" +
                "    value: " + toIndentedString(value) + "\n" +
                "}";
    }

    /**
     * The origin of the tag, like AWS or Cloud Foundry.   Custom tags use the &#x60;CONTEXTLESS&#x60; value.
     */
    @JsonAdapter(ContextEnum.Adapter.class)
    public enum ContextEnum {
        AWS("AWS"),
        CLOUD_FOUNDRY("CLOUD_FOUNDRY"),
        CONTEXTLESS("CONTEXTLESS"),
        ENVIRONMENT("ENVIRONMENT"),
        GOOGLE_CLOUD("GOOGLE_CLOUD"),
        KUBERNETES("KUBERNETES");

        private final String value;

        ContextEnum(String value) {
            this.value = value;
        }

        public static ContextEnum fromValue(String text) {
            return Arrays.stream(ContextEnum.values()).filter(b -> b.value.equalsIgnoreCase(text)).findFirst().orElse(null);
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return value;
        }

        public static class Adapter extends TypeAdapter<ContextEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final ContextEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public ContextEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return ContextEnum.fromValue(value);
            }
        }
    }

    @Extension
    public static class DescriptorImpl extends Descriptor<TagInfo> {
        @Nonnull
        @Override
        public String getDisplayName() {
            return "";
        }

        @Nonnull
        @Restricted(NoExternalUse.class)
        public ListBoxModel doFillContextItems(@AncestorInPath Item item) {
            if (PerfSigUIUtils.checkForMissingPermission(item)) {
                return new ListBoxModel();
            }
            return DynatraceUtils.listToListBoxModel(Arrays.asList(ContextEnum.values()));
        }
    }
}

